---
name: Sign image

inputs:
  signing-secret:
    description: The secret used for signing the image
    required: true
  image-ref:
    description: The reference to the image to sign
    required: true
  sbom-path:
    description: The path to the SBOM file to sign
    required: false
  KMS_KEY_ALIAS:
    description: The AWS KMS alias to use for signing
    required: false
  AWS_ROLE_ARN:
    description: The AWS role ARN to assume for signing
    required: false
  AWS_REGION:
    description: The AWS region to use for signing
    required: false

runs:
  using: "composite"
  steps:
    - name: Install Cosign
      uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

    - name: Sign Image with Signing Secret
      if: ${{ inputs.signing-secret != '' }}
      env:
        COSIGN_EXPERIMENTAL: false
        COSIGN_PRIVATE_KEY: ${{ inputs.signing-secret }}
      shell: bash
      run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ inputs.image-ref }}

    - name: SBOM Attestation with Signing Secret
      if: ${{ inputs.signing-secret != '' && inputs.sbom-path != '' }}
      env:
        COSIGN_PRIVATE_KEY: ${{ inputs.signing-secret }}
        SBOM_OUTPUT: ${{ inputs.sbom-path }}
      shell: bash
      run: |
        cd "$(dirname "$SBOM_OUTPUT")"
        cosign attest --yes \
          --predicate ./sbom.json \
          --type spdxjson \
          --key env://COSIGN_PRIVATE_KEY \
          ${{ inputs.image-ref }}

    - name: Configure AWS credentials
      if: ${{ inputs.AWS_ROLE_ARN != '' && inputs.AWS_REGION != '' && inputs.KMS_KEY_ALIAS != '' }}
      id: configure-aws
      uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: ${{ inputs.AWS_ROLE_ARN }}
        role-session-name: linux-bootc-signing-${{ github.run_id }}
        aws-region: ${{ inputs.AWS_REGION }}
        role-duration-seconds: 900  # 15 minutes, the minimum
        mask-aws-account-id: true

    - name: Sign Image with KMS
      if: ${{ env.AWS_SESSION_TOKEN != '' }}
      shell: bash
      run: cosign sign --yes --key awskms:///alias/${{ inputs.KMS_KEY_ALIAS }} ${{ inputs.image-ref }}

    - name: SBOM Attestation with KMS
      if: ${{ env.AWS_SESSION_TOKEN != '' && inputs.sbom-path != '' }}
      env:
        SBOM_OUTPUT: ${{ inputs.sbom-path }}
      shell: bash
      run: |
        cd "$(dirname "$SBOM_OUTPUT")"
        cosign attest --yes \
          --predicate ./sbom.json \
          --type spdxjson \
          --key awskms:///alias/${{ inputs.KMS_KEY_ALIAS }} \
          ${{ inputs.image-ref }}
